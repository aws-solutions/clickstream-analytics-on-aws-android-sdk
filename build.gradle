/*
 * Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

buildscript {
    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
    delete "clickstream/build/"
}


ext {
    buildToolsVersion = "30.0.2"
    compileSdkVersion = 30
    minSdkVersion = 16
    targetSdkVersion = 30
    awsSdkVersion = '2.51.0'
    amplifySdkVersion = '1.37.2'
    dependency = [
        android: [
            desugartools: 'com.android.tools:desugar_jdk_libs:1.0.9',
        ],
        androidx: [
            test: 'androidx.test:core:1.5.0',
            lifecycle: 'androidx.lifecycle:lifecycle-extensions:2.2.0'
        ],
        amplifyframework: [
            core: "com.amplifyframework:core:$amplifySdkVersion"
        ],
        aws: [
            mobileclient: "com.amazonaws:aws-android-sdk-mobile-client:$awsSdkVersion"
        ],
        okhttp: 'com.squareup.okhttp3:okhttp:4.9.1',
        junit: 'junit:junit:4.13.2',
        mockito: 'org.mockito:mockito-core:3.1.0',
        moco: 'com.github.dreamhead:moco-core:1.4.0',
        robolectric: 'org.robolectric:robolectric:4.9.2',
    ]
}

subprojects { project ->
    afterEvaluate {
        configAndroidLibrary(project)
        project.apply from: '../jacoco.gradle'
    }
}

private void configAndroidLibrary(Project project) {
    project.android {
        buildToolsVersion rootProject.ext.buildToolsVersion
        compileSdkVersion rootProject.ext.compileSdkVersion

        defaultConfig {
            multiDexEnabled true
            minSdkVersion project.findProperty('minSdkVersion')
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionName project.ext.VERSION_NAME
            consumerProguardFiles rootProject.file('configuration/consumer-rules.pro')
            testOptions {
                animationsDisabled = true
                unitTests {
                    includeAndroidResources = true
                }
            }
        }

        lintOptions {
            warningsAsErrors true
            abortOnError true
            enable 'UnusedResources'
            enable 'NewerVersionAvailable'
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    project.dependencies {
        coreLibraryDesugaring dependency.android.desugartools
    }
}