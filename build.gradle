/*
 * Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

plugins {
    id 'java'
    id 'jacoco'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

clean {
    delete rootProject.buildDir
    delete "clickstream/build/"
}


ext {
    compileSdkVersion = 34
    minSdkVersion = 19
    targetSdkVersion = 34
    awsSdkVersion = '2.59.1'
    amplifySdkVersion = '1.38.8'
    lifecycleVersion = "2.8.7"
    dependency = [
        android: [
            desugartools: 'com.android.tools:desugar_jdk_libs:1.0.9',
        ],
        androidx: [
            test: 'androidx.test:core:1.6.1',
            lifecycle_common: "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion",
            lifecycle_process: "androidx.lifecycle:lifecycle-process:$lifecycleVersion",
        ],
        amplifyframework: [
            core: "com.amplifyframework:core:$amplifySdkVersion"
        ],
        aws: [
            mobileclient: "com.amazonaws:aws-android-sdk-mobile-client:$awsSdkVersion"
        ],
        okhttp: 'com.squareup.okhttp3:okhttp:4.12.0',
        junit: 'junit:junit:4.13.2',
        mockito: 'org.mockito:mockito-core:5.14.2',
        mockitoinline: 'org.mockito:mockito-inline:4.11.0',
        moco: 'com.github.dreamhead:moco-core:1.4.0',
        robolectric: 'org.robolectric:robolectric:4.14',
    ]
}

subprojects { project ->
    afterEvaluate {
        configAndroidLibrary(project)
        project.apply from: '../jacoco.gradle'
        project.apply from: '../publishing.gradle'
    }
}

private void configAndroidLibrary(Project project) {
    project.android {
        compileSdkVersion rootProject.ext.compileSdkVersion

        defaultConfig {
            multiDexEnabled true
            minSdkVersion project.findProperty('minSdkVersion')
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionName project.ext.VERSION_NAME
            consumerProguardFiles rootProject.file('configuration/consumer-rules.pro')
            testOptions {
                animationsDisabled = true
                unitTests {
                    includeAndroidResources = true
                }
            }
        }

        lintOptions {
            warningsAsErrors true
            abortOnError true
            enable 'UnusedResources'
            enable 'NewerVersionAvailable'
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_21
            targetCompatibility JavaVersion.VERSION_21
        }
    }
    project.dependencies {
        coreLibraryDesugaring dependency.android.desugartools
    }
}
